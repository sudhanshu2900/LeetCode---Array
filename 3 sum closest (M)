PROBLEM LINK: https://leetcode.com/problems/3sum-closest/


SOLUTION:

int threeSumClosest(vector<int>& nums, int target) {
        sort(nums.begin(), nums.end());
        
        int n = nums.size();
        int i, left, right, currSum = 0, sum = nums[0]+nums[1]+nums[2];
        
        for(int i=0; i<n-2; i++)
        {
            left = i+1, right = n-1;
                
            while(left < right){
                currSum = (nums[left] + nums[right] + nums[i]);
                
                if(currSum == target) return currSum;
                if(abs(sum - target) > abs(target - currSum)) sum = currSum;
                if(currSum > target) right--;
                else left++;
            }
        }        
        return sum;
    }
    
    
    
    
    
